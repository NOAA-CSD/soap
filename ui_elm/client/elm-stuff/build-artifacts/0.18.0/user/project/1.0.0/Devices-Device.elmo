var _user$project$Devices_Device$checkEmptyDevice = function (devt) {
	return !_elm_lang$core$Native_Utils.eq(
		_elm_lang$core$Tuple$first(devt),
		'');
};
var _user$project$Devices_Device$defaultDevice = {type_: 'n', label: 'label', sn: '-1', controller: false, address: '-1', model: 'not_present', active: false, sp: _elm_lang$core$Maybe$Nothing};
var _user$project$Devices_Device$setSpIn = F2(
	function (sp, dev) {
		return _elm_lang$core$Native_Utils.update(
			dev,
			{
				sp: _elm_lang$core$Maybe$Just(sp)
			});
	});
var _user$project$Devices_Device$Device = F8(
	function (a, b, c, d, e, f, g, h) {
		return {type_: a, label: b, sn: c, controller: d, address: e, model: f, active: g, sp: h};
	});
var _user$project$Devices_Device$decodeDevice = A9(
	_elm_lang$core$Json_Decode$map8,
	_user$project$Devices_Device$Device,
	A2(_elm_lang$core$Json_Decode$field, 'type', _elm_lang$core$Json_Decode$string),
	A2(_elm_lang$core$Json_Decode$field, 'label', _elm_lang$core$Json_Decode$string),
	A2(_elm_lang$core$Json_Decode$field, 'sn', _elm_lang$core$Json_Decode$string),
	A2(_elm_lang$core$Json_Decode$field, 'controller', _elm_lang$core$Json_Decode$bool),
	A2(_elm_lang$core$Json_Decode$field, 'address', _elm_lang$core$Json_Decode$string),
	A2(_elm_lang$core$Json_Decode$field, 'model', _elm_lang$core$Json_Decode$string),
	A2(_elm_lang$core$Json_Decode$field, 'active', _elm_lang$core$Json_Decode$bool),
	_elm_lang$core$Json_Decode$maybe(
		A2(_elm_lang$core$Json_Decode$field, 'sp', _elm_lang$core$Json_Decode$string)));
var _user$project$Devices_Device$decodeDeviceCvt = A2(
	_elm_lang$core$Json_Decode$field,
	'device',
	_elm_lang$core$Json_Decode$dict(_user$project$Devices_Device$decodeDevice));
var _user$project$Devices_Device$defaultDeviceDict = A2(
	_elm_lang$core$Dict$singleton,
	'null_device',
	A8(_user$project$Devices_Device$Device, 'n', 'label', '-1', false, '-1', 'not_present', false, _elm_lang$core$Maybe$Nothing));
