var _user$project$Main$viewCal = function (model) {
	return A2(
		_debois$elm_mdl$Material_Grid$grid,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A2(
				_debois$elm_mdl$Material_Grid$cell,
				{ctor: '[]'},
				{ctor: '[]'}),
			_1: {ctor: '[]'}
		});
};
var _user$project$Main$viewMain = function (model) {
	return _elm_lang$html$Html$text('This is main');
};
var _user$project$Main$viewFooter = function (model) {
	return A2(
		_debois$elm_mdl$Material_Footer$mini,
		{
			ctor: '::',
			_0: A2(_debois$elm_mdl$Material_Options$css, 'position', 'fixed'),
			_1: {
				ctor: '::',
				_0: A2(_debois$elm_mdl$Material_Options$css, 'bottom', '0px'),
				_1: {
					ctor: '::',
					_0: A2(_debois$elm_mdl$Material_Options$css, 'width', '100%'),
					_1: {
						ctor: '::',
						_0: A2(_debois$elm_mdl$Material_Options$css, 'padding', '5px'),
						_1: {
							ctor: '::',
							_0: _debois$elm_mdl$Material_Color$background(
								A2(_debois$elm_mdl$Material_Color$color, _debois$elm_mdl$Material_Color$LightBlue, _debois$elm_mdl$Material_Color$S400)),
							_1: {ctor: '[]'}
						}
					}
				}
			}
		},
		{
			left: A2(
				_debois$elm_mdl$Material_Footer$left,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: A2(
						_debois$elm_mdl$Material_Footer$logo,
						{ctor: '[]'},
						{
							ctor: '::',
							_0: _debois$elm_mdl$Material_Footer$html(
								_elm_lang$html$Html$text(
									A2(
										_elm_lang$core$Basics_ops['++'],
										'Time: ',
										_Bogdanp$elm_time$Time_DateTime$toISO8601(model.dt)))),
							_1: {ctor: '[]'}
						}),
					_1: {ctor: '[]'}
				}),
			right: A2(
				_debois$elm_mdl$Material_Footer$right,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: A2(
						_debois$elm_mdl$Material_Footer$logo,
						{ctor: '[]'},
						{
							ctor: '::',
							_0: _debois$elm_mdl$Material_Footer$html(
								A2(
									_debois$elm_mdl$Material_Options$span,
									{
										ctor: '::',
										_0: _debois$elm_mdl$Material_Badge$add('3'),
										_1: {ctor: '[]'}
									},
									{ctor: '[]'})),
							_1: {ctor: '[]'}
						}),
					_1: {ctor: '[]'}
				})
		});
};
var _user$project$Main$pageHeader = function (model) {
	return {
		ctor: '::',
		_0: A2(
			_debois$elm_mdl$Material_Layout$row,
			{
				ctor: '::',
				_0: _debois$elm_mdl$Material_Options$nop,
				_1: {
					ctor: '::',
					_0: A2(_debois$elm_mdl$Material_Options$css, 'transition', 'height 333ms ease-in-out 0s'),
					_1: {ctor: '[]'}
				}
			},
			{
				ctor: '::',
				_0: A2(
					_debois$elm_mdl$Material_Layout$title,
					{ctor: '[]'},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text('NOAA gCRD-PAS'),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: _debois$elm_mdl$Material_Layout$spacer,
					_1: {
						ctor: '::',
						_0: A2(
							_debois$elm_mdl$Material_Layout$navigation,
							{ctor: '[]'},
							{
								ctor: '::',
								_0: A2(
									_debois$elm_mdl$Material_Layout$link,
									{ctor: '[]'},
									{ctor: '[]'}),
								_1: {
									ctor: '::',
									_0: A2(
										_debois$elm_mdl$Material_Layout$link,
										{
											ctor: '::',
											_0: _debois$elm_mdl$Material_Layout$href('https://esrl.noaa.gov/csd'),
											_1: {ctor: '[]'}
										},
										{
											ctor: '::',
											_0: A2(
												_elm_lang$html$Html$span,
												{ctor: '[]'},
												{
													ctor: '::',
													_0: _elm_lang$html$Html$text('noaa'),
													_1: {ctor: '[]'}
												}),
											_1: {ctor: '[]'}
										}),
									_1: {ctor: '[]'}
								}
							}),
						_1: {ctor: '[]'}
					}
				}
			}),
		_1: {ctor: '[]'}
	};
};
var _user$project$Main$defaultModelData = {
	pas: _user$project$Pas$init,
	crd: _user$project$Crd$init,
	alicat: _user$project$Devices_Alicat$init,
	tec: _user$project$Devices_Tec$init,
	instrData: _user$project$GcrdTypes$defaultData,
	cvt: _user$project$GcrdTypes$defaultCvtData,
	save: true,
	selectedTab: 0,
	dt: _Bogdanp$elm_time$Time_DateTime$fromTuple(
		{ctor: '_Tuple7', _0: 0, _1: 0, _2: 0, _3: 0, _4: 0, _5: 0, _6: 0}),
	mdl: _debois$elm_mdl$Material$model,
	network: {ipAddress: '192.168.172.123', port_: '8001'}
};
var _user$project$Main$init = {ctor: '_Tuple2', _0: _user$project$Main$defaultModelData, _1: _elm_lang$core$Platform_Cmd$none};
var _user$project$Main$alicats = {
	ctor: '::',
	_0: 'Cell 1',
	_1: {
		ctor: '::',
		_0: 'Cell 2',
		_1: {
			ctor: '::',
			_0: 'CRD Purge',
			_1: {ctor: '[]'}
		}
	}
};
var _user$project$Main$tecs = {
	ctor: '::',
	_0: 'PAS Cell 1',
	_1: {
		ctor: '::',
		_0: 'PAS Cell 2',
		_1: {
			ctor: '::',
			_0: 'CRD',
			_1: {ctor: '[]'}
		}
	}
};
var _user$project$Main$crdCells = {
	ctor: '::',
	_0: 'Cell 1',
	_1: {
		ctor: '::',
		_0: 'Cell 2',
		_1: {ctor: '[]'}
	}
};
var _user$project$Main$pasCells = {
	ctor: '::',
	_0: 'Cell 1',
	_1: {
		ctor: '::',
		_0: 'Cell 2',
		_1: {ctor: '[]'}
	}
};
var _user$project$Main$Model = function (a) {
	return function (b) {
		return function (c) {
			return function (d) {
				return function (e) {
					return function (f) {
						return function (g) {
							return function (h) {
								return function (i) {
									return function (j) {
										return function (k) {
											return {pas: a, crd: b, alicat: c, tec: d, instrData: e, cvt: f, save: g, selectedTab: h, dt: i, mdl: j, network: k};
										};
									};
								};
							};
						};
					};
				};
			};
		};
	};
};
var _user$project$Main$Alicat = function (a) {
	return {ctor: 'Alicat', _0: a};
};
var _user$project$Main$Tec = function (a) {
	return {ctor: 'Tec', _0: a};
};
var _user$project$Main$Crd = function (a) {
	return {ctor: 'Crd', _0: a};
};
var _user$project$Main$Pas = function (a) {
	return {ctor: 'Pas', _0: a};
};
var _user$project$Main$SaveData = {ctor: 'SaveData'};
var _user$project$Main$NoopInput = function (a) {
	return {ctor: 'NoopInput', _0: a};
};
var _user$project$Main$UpdateIP = function (a) {
	return {ctor: 'UpdateIP', _0: a};
};
var _user$project$Main$CheckRegularData = function (a) {
	return {ctor: 'CheckRegularData', _0: a};
};
var _user$project$Main$subscriptions = function (model) {
	return A2(_elm_lang$core$Time$every, _elm_lang$core$Time$second, _user$project$Main$CheckRegularData);
};
var _user$project$Main$SelectTab = function (a) {
	return {ctor: 'SelectTab', _0: a};
};
var _user$project$Main$Mdl = function (a) {
	return {ctor: 'Mdl', _0: a};
};
var _user$project$Main$textfield = F6(
	function (num, model, label, value, input_msg, blur_msg) {
		return A5(
			_debois$elm_mdl$Material_Textfield$render,
			_user$project$Main$Mdl,
			{
				ctor: '::',
				_0: num,
				_1: {ctor: '[]'}
			},
			model.mdl,
			A2(
				_elm_lang$core$Basics_ops['++'],
				{
					ctor: '::',
					_0: _debois$elm_mdl$Material_Textfield$floatingLabel,
					_1: {
						ctor: '::',
						_0: A2(_debois$elm_mdl$Material_Options$css, 'width', '125px'),
						_1: {
							ctor: '::',
							_0: _debois$elm_mdl$Material_Textfield$maxlength(15),
							_1: {
								ctor: '::',
								_0: _debois$elm_mdl$Material_Textfield$value(value),
								_1: {
									ctor: '::',
									_0: _debois$elm_mdl$Material_Options$onInput(input_msg),
									_1: {ctor: '[]'}
								}
							}
						}
					}
				},
				A2(
					_elm_lang$core$Basics_ops['++'],
					A2(
						_elm_lang$core$Maybe$withDefault,
						{ctor: '[]'},
						A2(
							_elm_lang$core$Maybe$map,
							function (lab) {
								return {
									ctor: '::',
									_0: _debois$elm_mdl$Material_Textfield$label(lab),
									_1: {ctor: '[]'}
								};
							},
							label)),
					A2(
						_elm_lang$core$Maybe$withDefault,
						{ctor: '[]'},
						A2(
							_elm_lang$core$Maybe$map,
							function (msg) {
								return {
									ctor: '::',
									_0: _debois$elm_mdl$Material_Options$onBlur(msg),
									_1: {ctor: '[]'}
								};
							},
							blur_msg)))),
			{ctor: '[]'});
	});
var _user$project$Main$viewConfig = function (model) {
	return A2(
		_debois$elm_mdl$Material_Grid$grid,
		{
			ctor: '::',
			_0: A2(_debois$elm_mdl$Material_Options$css, 'padding-bottom', '50px'),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: A2(
				_debois$elm_mdl$Material_Grid$cell,
				{
					ctor: '::',
					_0: A2(_debois$elm_mdl$Material_Grid$size, _debois$elm_mdl$Material_Grid$Desktop, 3),
					_1: {
						ctor: '::',
						_0: A2(_debois$elm_mdl$Material_Grid$size, _debois$elm_mdl$Material_Grid$Tablet, 5),
						_1: {
							ctor: '::',
							_0: A2(_debois$elm_mdl$Material_Grid$size, _debois$elm_mdl$Material_Grid$Phone, 3),
							_1: {ctor: '[]'}
						}
					}
				},
				{
					ctor: '::',
					_0: A6(
						_user$project$Main$textfield,
						0,
						model,
						_elm_lang$core$Maybe$Just('IP Address'),
						model.network.ipAddress,
						_user$project$Main$UpdateIP,
						_elm_lang$core$Maybe$Nothing),
					_1: {
						ctor: '::',
						_0: A6(
							_user$project$Main$textfield,
							1,
							model,
							_elm_lang$core$Maybe$Just('Port'),
							model.network.port_,
							_user$project$Main$UpdateIP,
							_elm_lang$core$Maybe$Nothing),
						_1: {ctor: '[]'}
					}
				}),
			_1: {ctor: '[]'}
		});
};
var _user$project$Main$floatTextfield = F6(
	function (num, model, label, value, input_msg, blur_msg) {
		return A5(
			_debois$elm_mdl$Material_Textfield$render,
			_user$project$Main$Mdl,
			{
				ctor: '::',
				_0: num,
				_1: {ctor: '[]'}
			},
			model.mdl,
			A2(
				_elm_lang$core$Basics_ops['++'],
				{
					ctor: '::',
					_0: _debois$elm_mdl$Material_Textfield$floatingLabel,
					_1: {
						ctor: '::',
						_0: A2(_debois$elm_mdl$Material_Options$css, 'width', '125px'),
						_1: {
							ctor: '::',
							_0: _debois$elm_mdl$Material_Textfield$maxlength(15),
							_1: {
								ctor: '::',
								_0: _debois$elm_mdl$Material_Textfield$value(
									_elm_lang$core$Basics$toString(value)),
								_1: {
									ctor: '::',
									_0: _debois$elm_mdl$Material_Options$onInput(input_msg),
									_1: {ctor: '[]'}
								}
							}
						}
					}
				},
				A2(
					_elm_lang$core$Basics_ops['++'],
					A2(
						_elm_lang$core$Maybe$withDefault,
						{ctor: '[]'},
						A2(
							_elm_lang$core$Maybe$map,
							function (lab) {
								return {
									ctor: '::',
									_0: _debois$elm_mdl$Material_Textfield$label(lab),
									_1: {ctor: '[]'}
								};
							},
							label)),
					A2(
						_elm_lang$core$Maybe$withDefault,
						{ctor: '[]'},
						A2(
							_elm_lang$core$Maybe$map,
							function (msg) {
								return {
									ctor: '::',
									_0: _debois$elm_mdl$Material_Options$onBlur(msg),
									_1: {ctor: '[]'}
								};
							},
							blur_msg)))),
			{ctor: '[]'});
	});
var _user$project$Main$intTextfield = F6(
	function (num, model, label, value, input_msg, blur_msg) {
		return A5(
			_debois$elm_mdl$Material_Textfield$render,
			_user$project$Main$Mdl,
			{
				ctor: '::',
				_0: num,
				_1: {ctor: '[]'}
			},
			model.mdl,
			A2(
				_elm_lang$core$Basics_ops['++'],
				{
					ctor: '::',
					_0: _debois$elm_mdl$Material_Textfield$floatingLabel,
					_1: {
						ctor: '::',
						_0: A2(_debois$elm_mdl$Material_Options$css, 'width', '125px'),
						_1: {
							ctor: '::',
							_0: _debois$elm_mdl$Material_Textfield$maxlength(15),
							_1: {
								ctor: '::',
								_0: _debois$elm_mdl$Material_Textfield$value(
									_elm_lang$core$Basics$toString(value)),
								_1: {
									ctor: '::',
									_0: _debois$elm_mdl$Material_Options$onInput(input_msg),
									_1: {ctor: '[]'}
								}
							}
						}
					}
				},
				A2(
					_elm_lang$core$Basics_ops['++'],
					A2(
						_elm_lang$core$Maybe$withDefault,
						{ctor: '[]'},
						A2(
							_elm_lang$core$Maybe$map,
							function (lab) {
								return {
									ctor: '::',
									_0: _debois$elm_mdl$Material_Textfield$label(lab),
									_1: {ctor: '[]'}
								};
							},
							label)),
					A2(
						_elm_lang$core$Maybe$withDefault,
						{ctor: '[]'},
						A2(
							_elm_lang$core$Maybe$map,
							function (msg) {
								return {
									ctor: '::',
									_0: _debois$elm_mdl$Material_Options$onBlur(msg),
									_1: {ctor: '[]'}
								};
							},
							blur_msg)))),
			{ctor: '[]'});
	});
var _user$project$Main$switch = F4(
	function (num, model, val, input_msg) {
		return A5(
			_debois$elm_mdl$Material_Toggles$switch,
			_user$project$Main$Mdl,
			{
				ctor: '::',
				_0: num,
				_1: {ctor: '[]'}
			},
			model.mdl,
			{
				ctor: '::',
				_0: _debois$elm_mdl$Material_Toggles$ripple,
				_1: {
					ctor: '::',
					_0: _debois$elm_mdl$Material_Toggles$value(val),
					_1: {
						ctor: '::',
						_0: _debois$elm_mdl$Material_Options$onInput(input_msg),
						_1: {ctor: '[]'}
					}
				}
			},
			{ctor: '[]'});
	});
var _user$project$Main$update = F2(
	function (msg, model) {
		var _p0 = msg;
		switch (_p0.ctor) {
			case 'Mdl':
				return A3(_debois$elm_mdl$Material$update, _user$project$Main$Mdl, _p0._0, model);
			case 'SelectTab':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{selectedTab: _p0._0}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'CheckRegularData':
				return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
			case 'UpdateIP':
				var network_ = model.network;
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{
							network: _elm_lang$core$Native_Utils.update(
								network_,
								{ipAddress: _p0._0})
						}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'NoopInput':
				return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
			case 'Pas':
				var pas_ = A2(_user$project$Pas$update, _p0._0, model.pas);
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{pas: pas_}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'Crd':
				var crd_ = A2(_user$project$Crd$update, _p0._0, model.crd);
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{crd: crd_}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'Tec':
				var tec = A2(_user$project$Devices_Tec$update, _p0._0, model.tec);
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{tec: tec}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'Alicat':
				var alicat = A2(_user$project$Devices_Alicat$update, _p0._0, model.alicat);
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{alicat: alicat}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			default:
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{save: !model.save}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
		}
	});
var _user$project$Main$viewSidebar = function (model) {
	return A2(
		_debois$elm_mdl$Material_Grid$grid,
		{
			ctor: '::',
			_0: A2(_debois$elm_mdl$Material_Grid$size, _debois$elm_mdl$Material_Grid$All, 12),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: A2(
				_debois$elm_mdl$Material_Grid$cell,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: A5(
						_debois$elm_mdl$Material_Toggles$switch,
						_user$project$Main$Mdl,
						{
							ctor: '::',
							_0: 10,
							_1: {ctor: '[]'}
						},
						model.mdl,
						{
							ctor: '::',
							_0: _debois$elm_mdl$Material_Toggles$ripple,
							_1: {
								ctor: '::',
								_0: _debois$elm_mdl$Material_Toggles$value(model.save),
								_1: {
									ctor: '::',
									_0: _debois$elm_mdl$Material_Options$onToggle(_user$project$Main$SaveData),
									_1: {ctor: '[]'}
								}
							}
						},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text('Save'),
							_1: {ctor: '[]'}
						}),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_debois$elm_mdl$Material_Grid$cell,
					{
						ctor: '::',
						_0: A2(_debois$elm_mdl$Material_Grid$size, _debois$elm_mdl$Material_Grid$All, 12),
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: A5(
							_debois$elm_mdl$Material_Button$render,
							_user$project$Main$Mdl,
							{
								ctor: '::',
								_0: 1,
								_1: {ctor: '[]'}
							},
							model.mdl,
							{
								ctor: '::',
								_0: _debois$elm_mdl$Material_Button$raised,
								_1: {
									ctor: '::',
									_0: _debois$elm_mdl$Material_Button$ripple,
									_1: {
										ctor: '::',
										_0: _debois$elm_mdl$Material_Button$primary,
										_1: {ctor: '[]'}
									}
								}
							},
							{
								ctor: '::',
								_0: _elm_lang$html$Html$text('Stop Server'),
								_1: {ctor: '[]'}
							}),
						_1: {ctor: '[]'}
					}),
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$Main$viewPas = function (model) {
	return A2(
		_debois$elm_mdl$Material_Grid$grid,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A2(
				_debois$elm_mdl$Material_Grid$cell,
				{
					ctor: '::',
					_0: A2(_debois$elm_mdl$Material_Grid$size, _debois$elm_mdl$Material_Grid$All, 12),
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: A2(
						_debois$elm_mdl$Material_Table$table,
						{ctor: '[]'},
						{
							ctor: '::',
							_0: A2(
								_debois$elm_mdl$Material_Table$thead,
								{ctor: '[]'},
								{
									ctor: '::',
									_0: A2(
										_debois$elm_mdl$Material_Table$tr,
										{ctor: '[]'},
										{
											ctor: '::',
											_0: A2(
												_debois$elm_mdl$Material_Table$th,
												{ctor: '[]'},
												{
													ctor: '::',
													_0: _elm_lang$html$Html$text('Cell'),
													_1: {ctor: '[]'}
												}),
											_1: {
												ctor: '::',
												_0: A2(
													_debois$elm_mdl$Material_Table$th,
													{ctor: '[]'},
													{
														ctor: '::',
														_0: _elm_lang$html$Html$text('Frequency'),
														_1: {ctor: '[]'}
													}),
												_1: {
													ctor: '::',
													_0: A2(
														_debois$elm_mdl$Material_Table$th,
														{ctor: '[]'},
														{
															ctor: '::',
															_0: _elm_lang$html$Html$text('Speaker?'),
															_1: {ctor: '[]'}
														}),
													_1: {
														ctor: '::',
														_0: A2(
															_debois$elm_mdl$Material_Table$th,
															{ctor: '[]'},
															{
																ctor: '::',
																_0: _elm_lang$html$Html$text('Speaker Power'),
																_1: {ctor: '[]'}
															}),
														_1: {ctor: '[]'}
													}
												}
											}
										}),
									_1: {ctor: '[]'}
								}),
							_1: {
								ctor: '::',
								_0: A2(
									_debois$elm_mdl$Material_Table$tbody,
									{ctor: '[]'},
									A2(
										_elm_lang$core$List$map,
										function (cell) {
											var data = _elm_lang$core$Tuple$second(cell);
											var id = _elm_lang$core$Tuple$first(cell);
											return A2(
												_debois$elm_mdl$Material_Table$tr,
												{ctor: '[]'},
												{
													ctor: '::',
													_0: A2(
														_debois$elm_mdl$Material_Table$td,
														{ctor: '[]'},
														{
															ctor: '::',
															_0: _elm_lang$html$Html$text(id),
															_1: {ctor: '[]'}
														}),
													_1: {
														ctor: '::',
														_0: A2(
															_debois$elm_mdl$Material_Table$td,
															{ctor: '[]'},
															{
																ctor: '::',
																_0: A6(
																	_user$project$Main$intTextfield,
																	0,
																	model,
																	_elm_lang$core$Maybe$Nothing,
																	data.frequency,
																	function (_p1) {
																		return _user$project$Main$Pas(
																			A2(_user$project$Pas$UpdateFreq, id, _p1));
																	},
																	_elm_lang$core$Maybe$Nothing),
																_1: {ctor: '[]'}
															}),
														_1: {
															ctor: '::',
															_0: A2(
																_debois$elm_mdl$Material_Table$td,
																{ctor: '[]'},
																{
																	ctor: '::',
																	_0: A5(
																		_debois$elm_mdl$Material_Toggles$switch,
																		_user$project$Main$Mdl,
																		{
																			ctor: '::',
																			_0: 10,
																			_1: {ctor: '[]'}
																		},
																		model.mdl,
																		{
																			ctor: '::',
																			_0: _debois$elm_mdl$Material_Toggles$ripple,
																			_1: {
																				ctor: '::',
																				_0: _debois$elm_mdl$Material_Toggles$value(
																					_elm_lang$core$Native_Utils.eq(data.drive, _user$project$Pas$Speaker)),
																				_1: {
																					ctor: '::',
																					_0: _debois$elm_mdl$Material_Options$onToggle(
																						function (_p2) {
																							return _user$project$Main$Pas(
																								_user$project$Pas$ToggleSpeaker(_p2));
																						}(id)),
																					_1: {ctor: '[]'}
																				}
																			}
																		},
																		{ctor: '[]'}),
																	_1: {ctor: '[]'}
																}),
															_1: {
																ctor: '::',
																_0: A2(
																	_debois$elm_mdl$Material_Table$td,
																	{ctor: '[]'},
																	{
																		ctor: '::',
																		_0: A5(
																			_debois$elm_mdl$Material_Toggles$switch,
																			_user$project$Main$Mdl,
																			{
																				ctor: '::',
																				_0: 11,
																				_1: {ctor: '[]'}
																			},
																			model.mdl,
																			{
																				ctor: '::',
																				_0: _debois$elm_mdl$Material_Toggles$ripple,
																				_1: {
																					ctor: '::',
																					_0: _debois$elm_mdl$Material_Toggles$value(data.speaker_power),
																					_1: {
																						ctor: '::',
																						_0: _debois$elm_mdl$Material_Options$onToggle(
																							function (_p3) {
																								return _user$project$Main$Pas(
																									_user$project$Pas$ToggleLaser(_p3));
																							}(id)),
																						_1: {ctor: '[]'}
																					}
																				}
																			},
																			{ctor: '[]'}),
																		_1: {ctor: '[]'}
																	}),
																_1: {ctor: '[]'}
															}
														}
													}
												});
										},
										_elm_lang$core$Dict$toList(model.pas.cvt))),
								_1: {ctor: '[]'}
							}
						}),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_debois$elm_mdl$Material_Grid$cell,
					{
						ctor: '::',
						_0: A2(_debois$elm_mdl$Material_Grid$size, _debois$elm_mdl$Material_Grid$All, 12),
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: A2(
							_debois$elm_mdl$Material_Table$table,
							{ctor: '[]'},
							{
								ctor: '::',
								_0: A2(
									_debois$elm_mdl$Material_Table$thead,
									{ctor: '[]'},
									{
										ctor: '::',
										_0: A2(
											_debois$elm_mdl$Material_Table$tr,
											{ctor: '[]'},
											{
												ctor: '::',
												_0: A2(
													_debois$elm_mdl$Material_Table$th,
													{ctor: '[]'},
													{
														ctor: '::',
														_0: _elm_lang$html$Html$text('Cell'),
														_1: {ctor: '[]'}
													}),
												_1: {
													ctor: '::',
													_0: A2(
														_debois$elm_mdl$Material_Table$th,
														{ctor: '[]'},
														{
															ctor: '::',
															_0: A2(
																_elm_lang$html$Html$span,
																{
																	ctor: '::',
																	_0: A2(
																		_elm_lang$html$Html_Attributes$property,
																		'innerHTML',
																		_elm_lang$core$Json_Encode$string('f<sub>0</sub>')),
																	_1: {ctor: '[]'}
																},
																{ctor: '[]'}),
															_1: {ctor: '[]'}
														}),
													_1: {
														ctor: '::',
														_0: A2(
															_debois$elm_mdl$Material_Table$th,
															{ctor: '[]'},
															{
																ctor: '::',
																_0: _elm_lang$html$Html$text('IA'),
																_1: {ctor: '[]'}
															}),
														_1: {
															ctor: '::',
															_0: A2(
																_debois$elm_mdl$Material_Table$th,
																{ctor: '[]'},
																{
																	ctor: '::',
																	_0: A2(
																		_elm_lang$html$Html$span,
																		{
																			ctor: '::',
																			_0: A2(
																				_elm_lang$html$Html_Attributes$property,
																				'innerHTML',
																				_elm_lang$core$Json_Encode$string('&sigma;<sub>abs</sub>')),
																			_1: {ctor: '[]'}
																		},
																		{ctor: '[]'}),
																	_1: {ctor: '[]'}
																}),
															_1: {ctor: '[]'}
														}
													}
												}
											}),
										_1: {
											ctor: '::',
											_0: A2(
												_debois$elm_mdl$Material_Table$tr,
												{ctor: '[]'},
												{
													ctor: '::',
													_0: A2(
														_debois$elm_mdl$Material_Table$th,
														{ctor: '[]'},
														{ctor: '[]'}),
													_1: {
														ctor: '::',
														_0: A2(
															_debois$elm_mdl$Material_Table$th,
															{ctor: '[]'},
															{
																ctor: '::',
																_0: _elm_lang$html$Html$text('(Hz)'),
																_1: {ctor: '[]'}
															}),
														_1: {
															ctor: '::',
															_0: A2(
																_debois$elm_mdl$Material_Table$th,
																{ctor: '[]'},
																{
																	ctor: '::',
																	_0: _elm_lang$html$Html$text('(a.u.)'),
																	_1: {ctor: '[]'}
																}),
															_1: {
																ctor: '::',
																_0: A2(
																	_debois$elm_mdl$Material_Table$th,
																	{ctor: '[]'},
																	{
																		ctor: '::',
																		_0: A2(
																			_elm_lang$html$Html$span,
																			{
																				ctor: '::',
																				_0: A2(
																					_elm_lang$html$Html_Attributes$property,
																					'innerHTML',
																					_elm_lang$core$Json_Encode$string('(Mm<sup>-1</sup>)')),
																				_1: {ctor: '[]'}
																			},
																			{ctor: '[]'}),
																		_1: {ctor: '[]'}
																	}),
																_1: {ctor: '[]'}
															}
														}
													}
												}),
											_1: {ctor: '[]'}
										}
									}),
								_1: {
									ctor: '::',
									_0: A2(
										_debois$elm_mdl$Material_Table$tbody,
										{ctor: '[]'},
										A2(
											_elm_lang$core$List$map,
											function (cell) {
												var data = _elm_lang$core$Tuple$second(cell);
												var id = _elm_lang$core$Tuple$first(cell);
												return A2(
													_debois$elm_mdl$Material_Table$tr,
													{ctor: '[]'},
													{
														ctor: '::',
														_0: A2(
															_debois$elm_mdl$Material_Table$td,
															{ctor: '[]'},
															{
																ctor: '::',
																_0: _elm_lang$html$Html$text(id),
																_1: {ctor: '[]'}
															}),
														_1: {
															ctor: '::',
															_0: A2(
																_debois$elm_mdl$Material_Table$td,
																{ctor: '[]'},
																{
																	ctor: '::',
																	_0: _elm_lang$html$Html$text(
																		_elm_lang$core$Basics$toString(data.resonant_frequency)),
																	_1: {ctor: '[]'}
																}),
															_1: {
																ctor: '::',
																_0: A2(
																	_debois$elm_mdl$Material_Table$td,
																	{ctor: '[]'},
																	{
																		ctor: '::',
																		_0: _elm_lang$html$Html$text(
																			_elm_lang$core$Basics$toString(data.integrated_area)),
																		_1: {ctor: '[]'}
																	}),
																_1: {
																	ctor: '::',
																	_0: A2(
																		_debois$elm_mdl$Material_Table$td,
																		{ctor: '[]'},
																		{
																			ctor: '::',
																			_0: _elm_lang$html$Html$text(
																				_elm_lang$core$Basics$toString(data.absorption)),
																			_1: {ctor: '[]'}
																		}),
																	_1: {ctor: '[]'}
																}
															}
														}
													});
											},
											_elm_lang$core$Dict$toList(model.pas.data.cell))),
									_1: {ctor: '[]'}
								}
							}),
						_1: {ctor: '[]'}
					}),
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$Main$viewCrd = function (model) {
	return A2(
		_debois$elm_mdl$Material_Grid$grid,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A2(
				_debois$elm_mdl$Material_Grid$cell,
				{
					ctor: '::',
					_0: A2(_debois$elm_mdl$Material_Grid$size, _debois$elm_mdl$Material_Grid$All, 1),
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: A5(
						_debois$elm_mdl$Material_Textfield$render,
						_user$project$Main$Mdl,
						{
							ctor: '::',
							_0: 0,
							_1: {ctor: '[]'}
						},
						model.mdl,
						{
							ctor: '::',
							_0: _debois$elm_mdl$Material_Textfield$label('f (Hz)'),
							_1: {
								ctor: '::',
								_0: _debois$elm_mdl$Material_Textfield$floatingLabel,
								_1: {
									ctor: '::',
									_0: A2(_debois$elm_mdl$Material_Options$css, 'width', '75px'),
									_1: {
										ctor: '::',
										_0: _debois$elm_mdl$Material_Textfield$maxlength(15),
										_1: {
											ctor: '::',
											_0: _debois$elm_mdl$Material_Textfield$value(model.crd.cvt.rate),
											_1: {
												ctor: '::',
												_0: _debois$elm_mdl$Material_Options$onInput(
													function (_p4) {
														return _user$project$Main$Crd(
															_user$project$Crd$UpdateFrequency(_p4));
													}),
												_1: {ctor: '[]'}
											}
										}
									}
								}
							}
						},
						{ctor: '[]'}),
					_1: {
						ctor: '::',
						_0: A5(
							_debois$elm_mdl$Material_Textfield$render,
							_user$project$Main$Mdl,
							{
								ctor: '::',
								_0: 0,
								_1: {ctor: '[]'}
							},
							model.mdl,
							{
								ctor: '::',
								_0: _debois$elm_mdl$Material_Textfield$label('Duty Cycle'),
								_1: {
									ctor: '::',
									_0: _debois$elm_mdl$Material_Textfield$floatingLabel,
									_1: {
										ctor: '::',
										_0: A2(_debois$elm_mdl$Material_Options$css, 'width', '75px'),
										_1: {
											ctor: '::',
											_0: _debois$elm_mdl$Material_Textfield$maxlength(4),
											_1: {
												ctor: '::',
												_0: _debois$elm_mdl$Material_Textfield$value(model.crd.cvt.duty_cycle),
												_1: {
													ctor: '::',
													_0: _debois$elm_mdl$Material_Options$onInput(
														function (_p5) {
															return _user$project$Main$Crd(
																_user$project$Crd$UpdateDutyCycle(_p5));
														}),
													_1: {ctor: '[]'}
												}
											}
										}
									}
								}
							},
							{ctor: '[]'}),
						_1: {
							ctor: '::',
							_0: A5(
								_debois$elm_mdl$Material_Toggles$switch,
								_user$project$Main$Mdl,
								{
									ctor: '::',
									_0: 12,
									_1: {ctor: '[]'}
								},
								model.mdl,
								{
									ctor: '::',
									_0: _debois$elm_mdl$Material_Toggles$ripple,
									_1: {
										ctor: '::',
										_0: _debois$elm_mdl$Material_Toggles$value(model.crd.cvt.power),
										_1: {
											ctor: '::',
											_0: _debois$elm_mdl$Material_Options$onToggle(
												_user$project$Main$Crd(_user$project$Crd$UpdatePower)),
											_1: {ctor: '[]'}
										}
									}
								},
								{
									ctor: '::',
									_0: _elm_lang$html$Html$text('Power'),
									_1: {ctor: '[]'}
								}),
							_1: {ctor: '[]'}
						}
					}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_debois$elm_mdl$Material_Grid$cell,
					{
						ctor: '::',
						_0: A2(_debois$elm_mdl$Material_Grid$size, _debois$elm_mdl$Material_Grid$Desktop, 10),
						_1: {
							ctor: '::',
							_0: A2(_debois$elm_mdl$Material_Grid$size, _debois$elm_mdl$Material_Grid$Tablet, 6),
							_1: {ctor: '[]'}
						}
					},
					{
						ctor: '::',
						_0: A2(
							_debois$elm_mdl$Material_Table$table,
							{ctor: '[]'},
							{
								ctor: '::',
								_0: A2(
									_debois$elm_mdl$Material_Table$thead,
									{ctor: '[]'},
									{
										ctor: '::',
										_0: A2(
											_debois$elm_mdl$Material_Table$tr,
											{ctor: '[]'},
											{
												ctor: '::',
												_0: A2(
													_debois$elm_mdl$Material_Table$th,
													{ctor: '[]'},
													{
														ctor: '::',
														_0: _elm_lang$html$Html$text('ID'),
														_1: {ctor: '[]'}
													}),
												_1: {
													ctor: '::',
													_0: A2(
														_debois$elm_mdl$Material_Table$th,
														{ctor: '[]'},
														{
															ctor: '::',
															_0: A2(
																_elm_lang$html$Html$span,
																{
																	ctor: '::',
																	_0: A2(
																		_elm_lang$html$Html_Attributes$property,
																		'innerHTML',
																		_elm_lang$core$Json_Encode$string('&tau;')),
																	_1: {ctor: '[]'}
																},
																{ctor: '[]'}),
															_1: {ctor: '[]'}
														}),
													_1: {
														ctor: '::',
														_0: A2(
															_debois$elm_mdl$Material_Table$th,
															{ctor: '[]'},
															{
																ctor: '::',
																_0: A2(
																	_elm_lang$html$Html$span,
																	{
																		ctor: '::',
																		_0: A2(
																			_elm_lang$html$Html_Attributes$property,
																			'innerHTML',
																			_elm_lang$core$Json_Encode$string('&tau;<sub>0</sub>')),
																		_1: {ctor: '[]'}
																	},
																	{ctor: '[]'}),
																_1: {ctor: '[]'}
															}),
														_1: {
															ctor: '::',
															_0: A2(
																_debois$elm_mdl$Material_Table$th,
																{ctor: '[]'},
																{
																	ctor: '::',
																	_0: A2(
																		_elm_lang$html$Html$span,
																		{
																			ctor: '::',
																			_0: A2(
																				_elm_lang$html$Html_Attributes$property,
																				'innerHTML',
																				_elm_lang$core$Json_Encode$string('&tau;<sub>0</sub>\'')),
																			_1: {ctor: '[]'}
																		},
																		{ctor: '[]'}),
																	_1: {ctor: '[]'}
																}),
															_1: {
																ctor: '::',
																_0: A2(
																	_debois$elm_mdl$Material_Table$th,
																	{ctor: '[]'},
																	{
																		ctor: '::',
																		_0: A2(
																			_elm_lang$html$Html$span,
																			{
																				ctor: '::',
																				_0: A2(
																					_elm_lang$html$Html_Attributes$property,
																					'innerHTML',
																					_elm_lang$core$Json_Encode$string('&tau;\'')),
																				_1: {ctor: '[]'}
																			},
																			{ctor: '[]'}),
																		_1: {ctor: '[]'}
																	}),
																_1: {
																	ctor: '::',
																	_0: A2(
																		_debois$elm_mdl$Material_Table$th,
																		{ctor: '[]'},
																		{
																			ctor: '::',
																			_0: A2(
																				_elm_lang$html$Html$span,
																				{
																					ctor: '::',
																					_0: A2(
																						_elm_lang$html$Html_Attributes$property,
																						'innerHTML',
																						_elm_lang$core$Json_Encode$string('&sigma;')),
																					_1: {ctor: '[]'}
																				},
																				{ctor: '[]'}),
																			_1: {ctor: '[]'}
																		}),
																	_1: {
																		ctor: '::',
																		_0: A2(
																			_debois$elm_mdl$Material_Table$th,
																			{ctor: '[]'},
																			{
																				ctor: '::',
																				_0: _elm_lang$html$Html$text('max'),
																				_1: {ctor: '[]'}
																			}),
																		_1: {ctor: '[]'}
																	}
																}
															}
														}
													}
												}
											}),
										_1: {
											ctor: '::',
											_0: A2(
												_debois$elm_mdl$Material_Table$tr,
												{ctor: '[]'},
												{
													ctor: '::',
													_0: A2(
														_debois$elm_mdl$Material_Table$th,
														{ctor: '[]'},
														{ctor: '[]'}),
													_1: {
														ctor: '::',
														_0: A2(
															_debois$elm_mdl$Material_Table$th,
															{ctor: '[]'},
															{
																ctor: '::',
																_0: _elm_lang$html$Html$text('(us)'),
																_1: {ctor: '[]'}
															}),
														_1: {
															ctor: '::',
															_0: A2(
																_debois$elm_mdl$Material_Table$th,
																{ctor: '[]'},
																{
																	ctor: '::',
																	_0: _elm_lang$html$Html$text('(us)'),
																	_1: {ctor: '[]'}
																}),
															_1: {
																ctor: '::',
																_0: A2(
																	_debois$elm_mdl$Material_Table$th,
																	{ctor: '[]'},
																	{
																		ctor: '::',
																		_0: _elm_lang$html$Html$text('(us)'),
																		_1: {ctor: '[]'}
																	}),
																_1: {
																	ctor: '::',
																	_0: A2(
																		_debois$elm_mdl$Material_Table$th,
																		{ctor: '[]'},
																		{
																			ctor: '::',
																			_0: _elm_lang$html$Html$text('(us)'),
																			_1: {ctor: '[]'}
																		}),
																	_1: {
																		ctor: '::',
																		_0: A2(
																			_debois$elm_mdl$Material_Table$th,
																			{ctor: '[]'},
																			{
																				ctor: '::',
																				_0: A2(
																					_elm_lang$html$Html$span,
																					{
																						ctor: '::',
																						_0: A2(
																							_elm_lang$html$Html_Attributes$property,
																							'innerHTML',
																							_elm_lang$core$Json_Encode$string('Mm<sup>-1</sup>')),
																						_1: {ctor: '[]'}
																					},
																					{ctor: '[]'}),
																				_1: {ctor: '[]'}
																			}),
																		_1: {
																			ctor: '::',
																			_0: A2(
																				_debois$elm_mdl$Material_Table$th,
																				{ctor: '[]'},
																				{
																					ctor: '::',
																					_0: _elm_lang$html$Html$text('(a.u.)'),
																					_1: {ctor: '[]'}
																				}),
																			_1: {ctor: '[]'}
																		}
																	}
																}
															}
														}
													}
												}),
											_1: {ctor: '[]'}
										}
									}),
								_1: {
									ctor: '::',
									_0: A2(
										_debois$elm_mdl$Material_Table$tbody,
										{ctor: '[]'},
										A2(
											_elm_lang$core$List$map,
											function (cell) {
												var data = _elm_lang$core$Tuple$second(cell);
												var id = _elm_lang$core$Tuple$first(cell);
												return A2(
													_debois$elm_mdl$Material_Table$tr,
													{ctor: '[]'},
													{
														ctor: '::',
														_0: A2(
															_debois$elm_mdl$Material_Table$td,
															{ctor: '[]'},
															{
																ctor: '::',
																_0: _elm_lang$html$Html$text(id),
																_1: {ctor: '[]'}
															}),
														_1: {
															ctor: '::',
															_0: A2(
																_debois$elm_mdl$Material_Table$td,
																{ctor: '[]'},
																{
																	ctor: '::',
																	_0: _elm_lang$html$Html$text(
																		_elm_lang$core$Basics$toString(data.tau)),
																	_1: {ctor: '[]'}
																}),
															_1: {
																ctor: '::',
																_0: A2(
																	_debois$elm_mdl$Material_Table$td,
																	{ctor: '[]'},
																	{
																		ctor: '::',
																		_0: _elm_lang$html$Html$text(
																			_elm_lang$core$Basics$toString(data.tau0)),
																		_1: {ctor: '[]'}
																	}),
																_1: {
																	ctor: '::',
																	_0: A2(
																		_debois$elm_mdl$Material_Table$td,
																		{ctor: '[]'},
																		{
																			ctor: '::',
																			_0: _elm_lang$html$Html$text(
																				_elm_lang$core$Basics$toString(data.tau0corr)),
																			_1: {ctor: '[]'}
																		}),
																	_1: {
																		ctor: '::',
																		_0: A2(
																			_debois$elm_mdl$Material_Table$td,
																			{ctor: '[]'},
																			{
																				ctor: '::',
																				_0: _elm_lang$html$Html$text(
																					_elm_lang$core$Basics$toString(data.tauCorrected)),
																				_1: {ctor: '[]'}
																			}),
																		_1: {
																			ctor: '::',
																			_0: A2(
																				_debois$elm_mdl$Material_Table$td,
																				{ctor: '[]'},
																				{
																					ctor: '::',
																					_0: _elm_lang$html$Html$text(
																						_elm_lang$core$Basics$toString(data.extinction)),
																					_1: {ctor: '[]'}
																				}),
																			_1: {
																				ctor: '::',
																				_0: A2(
																					_debois$elm_mdl$Material_Table$td,
																					{ctor: '[]'},
																					{
																						ctor: '::',
																						_0: _elm_lang$html$Html$text(
																							_elm_lang$core$Basics$toString(data.max)),
																						_1: {ctor: '[]'}
																					}),
																				_1: {ctor: '[]'}
																			}
																		}
																	}
																}
															}
														}
													});
											},
											_elm_lang$core$Dict$toList(model.crd.data))),
									_1: {ctor: '[]'}
								}
							}),
						_1: {ctor: '[]'}
					}),
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$Main$viewAux = function (model) {
	return A2(
		_debois$elm_mdl$Material_Grid$grid,
		{ctor: '[]'},
		A2(
			_elm_lang$core$Basics_ops['++'],
			A2(
				_elm_lang$core$List$map,
				function (heater) {
					var values = _elm_lang$core$Tuple$second(heater);
					var id = _elm_lang$core$Tuple$first(heater);
					return A2(
						_debois$elm_mdl$Material_Grid$cell,
						{
							ctor: '::',
							_0: A2(_debois$elm_mdl$Material_Grid$size, _debois$elm_mdl$Material_Grid$All, 2),
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: A2(
								_debois$elm_mdl$Material_Card$view,
								{
									ctor: '::',
									_0: A2(_debois$elm_mdl$Material_Options$css, 'width', '150px'),
									_1: {ctor: '[]'}
								},
								{
									ctor: '::',
									_0: A2(
										_debois$elm_mdl$Material_Card$title,
										{ctor: '[]'},
										{
											ctor: '::',
											_0: A2(
												_debois$elm_mdl$Material_Card$head,
												{ctor: '[]'},
												{
													ctor: '::',
													_0: _elm_lang$html$Html$text(values.label),
													_1: {ctor: '[]'}
												}),
											_1: {ctor: '[]'}
										}),
									_1: {
										ctor: '::',
										_0: A2(
											_debois$elm_mdl$Material_Card$actions,
											{ctor: '[]'},
											{
												ctor: '::',
												_0: A5(
													_debois$elm_mdl$Material_Textfield$render,
													_user$project$Main$Mdl,
													{
														ctor: '::',
														_0: 0,
														_1: {ctor: '[]'}
													},
													model.mdl,
													{
														ctor: '::',
														_0: _debois$elm_mdl$Material_Textfield$label('Setpoint'),
														_1: {
															ctor: '::',
															_0: _debois$elm_mdl$Material_Textfield$floatingLabel,
															_1: {
																ctor: '::',
																_0: A2(_debois$elm_mdl$Material_Options$css, 'width', '75px'),
																_1: {
																	ctor: '::',
																	_0: _debois$elm_mdl$Material_Textfield$maxlength(6),
																	_1: {
																		ctor: '::',
																		_0: _debois$elm_mdl$Material_Textfield$value(values.setpoint),
																		_1: {
																			ctor: '::',
																			_0: _debois$elm_mdl$Material_Options$onBlur(
																				_user$project$Main$Tec(
																					_user$project$Devices_Tec$SendCurrentValues(id))),
																			_1: {
																				ctor: '::',
																				_0: _debois$elm_mdl$Material_Options$onInput(
																					function (_p6) {
																						return _user$project$Main$Tec(
																							A2(_user$project$Devices_Tec$UpdateSp, id, _p6));
																					}),
																				_1: {ctor: '[]'}
																			}
																		}
																	}
																}
															}
														}
													},
													{ctor: '[]'}),
												_1: {
													ctor: '::',
													_0: A5(
														_debois$elm_mdl$Material_Textfield$render,
														_user$project$Main$Mdl,
														{
															ctor: '::',
															_0: 1,
															_1: {ctor: '[]'}
														},
														model.mdl,
														{
															ctor: '::',
															_0: _debois$elm_mdl$Material_Textfield$label('P'),
															_1: {
																ctor: '::',
																_0: _debois$elm_mdl$Material_Textfield$floatingLabel,
																_1: {
																	ctor: '::',
																	_0: A2(_debois$elm_mdl$Material_Options$css, 'width', '75px'),
																	_1: {
																		ctor: '::',
																		_0: _debois$elm_mdl$Material_Textfield$maxlength(6),
																		_1: {
																			ctor: '::',
																			_0: _debois$elm_mdl$Material_Textfield$value(values.p),
																			_1: {
																				ctor: '::',
																				_0: _debois$elm_mdl$Material_Options$onBlur(
																					_user$project$Main$Tec(
																						_user$project$Devices_Tec$SendCurrentValues(id))),
																				_1: {
																					ctor: '::',
																					_0: _debois$elm_mdl$Material_Options$onInput(
																						function (_p7) {
																							return _user$project$Main$Tec(
																								A2(_user$project$Devices_Tec$UpdateP, id, _p7));
																						}),
																					_1: {ctor: '[]'}
																				}
																			}
																		}
																	}
																}
															}
														},
														{ctor: '[]'}),
													_1: {
														ctor: '::',
														_0: A5(
															_debois$elm_mdl$Material_Textfield$render,
															_user$project$Main$Mdl,
															{
																ctor: '::',
																_0: 2,
																_1: {ctor: '[]'}
															},
															model.mdl,
															{
																ctor: '::',
																_0: _debois$elm_mdl$Material_Textfield$label('I'),
																_1: {
																	ctor: '::',
																	_0: _debois$elm_mdl$Material_Textfield$floatingLabel,
																	_1: {
																		ctor: '::',
																		_0: A2(_debois$elm_mdl$Material_Options$css, 'width', '75px'),
																		_1: {
																			ctor: '::',
																			_0: _debois$elm_mdl$Material_Textfield$maxlength(6),
																			_1: {
																				ctor: '::',
																				_0: _debois$elm_mdl$Material_Textfield$value(values.i),
																				_1: {
																					ctor: '::',
																					_0: _debois$elm_mdl$Material_Options$onBlur(
																						_user$project$Main$Tec(
																							_user$project$Devices_Tec$SendCurrentValues(id))),
																					_1: {
																						ctor: '::',
																						_0: _debois$elm_mdl$Material_Options$onInput(
																							function (_p8) {
																								return _user$project$Main$Tec(
																									A2(_user$project$Devices_Tec$UpdateI, id, _p8));
																							}),
																						_1: {ctor: '[]'}
																					}
																				}
																			}
																		}
																	}
																}
															},
															{ctor: '[]'}),
														_1: {
															ctor: '::',
															_0: A5(
																_debois$elm_mdl$Material_Textfield$render,
																_user$project$Main$Mdl,
																{
																	ctor: '::',
																	_0: 3,
																	_1: {ctor: '[]'}
																},
																model.mdl,
																{
																	ctor: '::',
																	_0: _debois$elm_mdl$Material_Textfield$label('D'),
																	_1: {
																		ctor: '::',
																		_0: _debois$elm_mdl$Material_Textfield$floatingLabel,
																		_1: {
																			ctor: '::',
																			_0: A2(_debois$elm_mdl$Material_Options$css, 'width', '75px'),
																			_1: {
																				ctor: '::',
																				_0: _debois$elm_mdl$Material_Textfield$maxlength(6),
																				_1: {
																					ctor: '::',
																					_0: _debois$elm_mdl$Material_Textfield$value(values.d),
																					_1: {
																						ctor: '::',
																						_0: _debois$elm_mdl$Material_Options$onInput(
																							function (_p9) {
																								return _user$project$Main$Tec(
																									A2(_user$project$Devices_Tec$UpdateD, id, _p9));
																							}),
																						_1: {
																							ctor: '::',
																							_0: _debois$elm_mdl$Material_Options$onBlur(
																								_user$project$Main$Tec(
																									_user$project$Devices_Tec$SendCurrentValues(id))),
																							_1: {ctor: '[]'}
																						}
																					}
																				}
																			}
																		}
																	}
																},
																{ctor: '[]'}),
															_1: {
																ctor: '::',
																_0: A5(
																	_debois$elm_mdl$Material_Toggles$switch,
																	_user$project$Main$Mdl,
																	{
																		ctor: '::',
																		_0: 10,
																		_1: {ctor: '[]'}
																	},
																	model.mdl,
																	{
																		ctor: '::',
																		_0: _debois$elm_mdl$Material_Toggles$ripple,
																		_1: {
																			ctor: '::',
																			_0: _debois$elm_mdl$Material_Toggles$value(values.power),
																			_1: {
																				ctor: '::',
																				_0: _debois$elm_mdl$Material_Options$onToggle(
																					_user$project$Main$Tec(
																						_user$project$Devices_Tec$TogglePower(id))),
																				_1: {ctor: '[]'}
																			}
																		}
																	},
																	{
																		ctor: '::',
																		_0: _elm_lang$html$Html$text('Power'),
																		_1: {ctor: '[]'}
																	}),
																_1: {ctor: '[]'}
															}
														}
													}
												}
											}),
										_1: {ctor: '[]'}
									}
								}),
							_1: {ctor: '[]'}
						});
				},
				_elm_lang$core$Dict$toList(model.tec.cvt)),
			{
				ctor: '::',
				_0: A2(
					_debois$elm_mdl$Material_Grid$cell,
					{
						ctor: '::',
						_0: A2(_debois$elm_mdl$Material_Grid$size, _debois$elm_mdl$Material_Grid$All, 2),
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: A2(
							_debois$elm_mdl$Material_Card$view,
							{
								ctor: '::',
								_0: A2(_debois$elm_mdl$Material_Options$css, 'width', '150px'),
								_1: {ctor: '[]'}
							},
							{
								ctor: '::',
								_0: A2(
									_debois$elm_mdl$Material_Card$title,
									{ctor: '[]'},
									{
										ctor: '::',
										_0: A2(
											_debois$elm_mdl$Material_Card$head,
											{ctor: '[]'},
											{
												ctor: '::',
												_0: _elm_lang$html$Html$text('Alicat Setpoints'),
												_1: {ctor: '[]'}
											}),
										_1: {ctor: '[]'}
									}),
								_1: {
									ctor: '::',
									_0: A2(
										_debois$elm_mdl$Material_Card$actions,
										{ctor: '[]'},
										A2(
											_elm_lang$core$List$map,
											function (alicat) {
												var device = _elm_lang$core$Tuple$second(alicat);
												var id = _elm_lang$core$Tuple$first(alicat);
												var output = device.is_controller ? A5(
													_debois$elm_mdl$Material_Textfield$render,
													_user$project$Main$Mdl,
													{
														ctor: '::',
														_0: 0,
														_1: {ctor: '[]'}
													},
													model.mdl,
													{
														ctor: '::',
														_0: _debois$elm_mdl$Material_Textfield$label(device.label),
														_1: {
															ctor: '::',
															_0: _debois$elm_mdl$Material_Textfield$floatingLabel,
															_1: {
																ctor: '::',
																_0: A2(_debois$elm_mdl$Material_Options$css, 'width', '75px'),
																_1: {
																	ctor: '::',
																	_0: _debois$elm_mdl$Material_Textfield$maxlength(6),
																	_1: {
																		ctor: '::',
																		_0: _debois$elm_mdl$Material_Textfield$value(
																			A2(_elm_lang$core$Maybe$withDefault, '0', device.setpoint)),
																		_1: {
																			ctor: '::',
																			_0: _debois$elm_mdl$Material_Options$onBlur(
																				_user$project$Main$Alicat(
																					_user$project$Devices_Alicat$SendNewSetpoint(id))),
																			_1: {
																				ctor: '::',
																				_0: _debois$elm_mdl$Material_Options$onInput(
																					function (_p10) {
																						return _user$project$Main$Alicat(
																							A2(_user$project$Devices_Alicat$UpdateSetpoint, id, _p10));
																					}),
																				_1: {ctor: '[]'}
																			}
																		}
																	}
																}
															}
														}
													},
													{ctor: '[]'}) : _elm_lang$html$Html$text('');
												return output;
											},
											_elm_lang$core$Dict$toList(model.alicat.cvt.devices))),
									_1: {ctor: '[]'}
								}
							}),
						_1: {ctor: '[]'}
					}),
				_1: {ctor: '[]'}
			}));
};
var _user$project$Main$viewBody = function (model) {
	return A2(
		_debois$elm_mdl$Material_Grid$grid,
		{
			ctor: '::',
			_0: A2(_debois$elm_mdl$Material_Options$css, 'padding-bottom', '35px'),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: A2(
				_debois$elm_mdl$Material_Grid$cell,
				{
					ctor: '::',
					_0: A2(_debois$elm_mdl$Material_Grid$size, _debois$elm_mdl$Material_Grid$Desktop, 10),
					_1: {
						ctor: '::',
						_0: A2(_debois$elm_mdl$Material_Grid$size, _debois$elm_mdl$Material_Grid$Tablet, 7),
						_1: {
							ctor: '::',
							_0: A2(_debois$elm_mdl$Material_Grid$size, _debois$elm_mdl$Material_Grid$Phone, 3),
							_1: {ctor: '[]'}
						}
					}
				},
				{
					ctor: '::',
					_0: function () {
						var _p11 = model.selectedTab;
						switch (_p11) {
							case 0:
								return _user$project$Main$viewMain(model);
							case 1:
								return _user$project$Main$viewPas(model);
							case 2:
								return _user$project$Main$viewCrd(model);
							case 3:
								return _user$project$Main$viewAux(model);
							case 5:
								return _user$project$Main$viewConfig(model);
							default:
								return _elm_lang$html$Html$text('404');
						}
					}(),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_debois$elm_mdl$Material_Grid$cell,
					{
						ctor: '::',
						_0: A2(_debois$elm_mdl$Material_Grid$size, _debois$elm_mdl$Material_Grid$Desktop, 2),
						_1: {
							ctor: '::',
							_0: A2(_debois$elm_mdl$Material_Grid$size, _debois$elm_mdl$Material_Grid$Tablet, 1),
							_1: {
								ctor: '::',
								_0: A2(_debois$elm_mdl$Material_Grid$size, _debois$elm_mdl$Material_Grid$Phone, 1),
								_1: {ctor: '[]'}
							}
						}
					},
					{
						ctor: '::',
						_0: _user$project$Main$viewSidebar(model),
						_1: {ctor: '[]'}
					}),
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$Main$view = function (model) {
	return A4(
		_debois$elm_mdl$Material_Layout$render,
		_user$project$Main$Mdl,
		model.mdl,
		{
			ctor: '::',
			_0: _debois$elm_mdl$Material_Layout$fixedHeader,
			_1: {
				ctor: '::',
				_0: _debois$elm_mdl$Material_Layout$onSelectTab(_user$project$Main$SelectTab),
				_1: {
					ctor: '::',
					_0: _debois$elm_mdl$Material_Layout$selectedTab(model.selectedTab),
					_1: {ctor: '[]'}
				}
			}
		},
		{
			header: _user$project$Main$pageHeader(model),
			drawer: {ctor: '[]'},
			tabs: {
				ctor: '_Tuple2',
				_0: {
					ctor: '::',
					_0: _elm_lang$html$Html$text('Main'),
					_1: {
						ctor: '::',
						_0: _elm_lang$html$Html$text('PAS'),
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html$text('CRD'),
							_1: {
								ctor: '::',
								_0: _elm_lang$html$Html$text('Auxilary'),
								_1: {
									ctor: '::',
									_0: _elm_lang$html$Html$text('Automation'),
									_1: {
										ctor: '::',
										_0: _elm_lang$html$Html$text('Configuration'),
										_1: {ctor: '[]'}
									}
								}
							}
						}
					}
				},
				_1: {
					ctor: '::',
					_0: _debois$elm_mdl$Material_Color$background(
						A2(_debois$elm_mdl$Material_Color$color, _debois$elm_mdl$Material_Color$LightBlue, _debois$elm_mdl$Material_Color$S400)),
					_1: {ctor: '[]'}
				}
			},
			main: {
				ctor: '::',
				_0: _user$project$Main$viewBody(model),
				_1: {
					ctor: '::',
					_0: _user$project$Main$viewFooter(model),
					_1: {ctor: '[]'}
				}
			}
		});
};
var _user$project$Main$main = _elm_lang$html$Html$program(
	{init: _user$project$Main$init, view: _user$project$Main$view, update: _user$project$Main$update, subscriptions: _user$project$Main$subscriptions})();
